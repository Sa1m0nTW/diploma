@model WorkWise.Models.Squads
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

@{
    ViewData["Title"] = "Команда " + Model.Name;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <h2>@Model.Name</h2>
            <p class="lead">Лидер: @Model.Leader.UserName</p>
        </div>
    </div>

    <div class="card mt-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5>Участники команды</h5>
            @if (User.Identity.Name == Model.Leader.UserName)
            {
            <button class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#inviteModal">
                <i class="bi bi-plus-lg"></i> Пригласить
            </button>
            }
        </div>
        <div class="card-body">
            <div class="list-group">
                @foreach (var member in Model.UserSquads)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <a asp-controller="Profiles" asp-action="Index" asp-route-id="@member.User.Id"
                               class="text-decoration-none text-dark">
                                @if (!string.IsNullOrEmpty(member.User.ProfilePictureUrl))
                                {
                                    <img src="@member.User.ProfilePictureUrl"
                                         class="rounded-circle me-3"
                                         width="40" height="40"
                                         alt="@member.User.UserName">
                                }
                                <div>
                                    <h6 class="mb-1">@member.User.UserName</h6>
                                    <small class="text-muted">@member.Role</small>
                                </div>
                            </a>
                        </div>

                        @if (User.Identity.Name == Model.Leader.UserName && member.UserId != Model.LeaderID)
                        {
                            <button class="btn btn-sm btn-outline-danger remove-member"
                                    data-userid="@member.UserId"
                                    data-squadid="@Model.Id">
                                <i class="bi bi-trash"></i> Удалить
                            </button>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    @if (User.Identity.Name == Model.Leader.UserName)
    {
        <div class="card mt-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5>Задачи команды</h5>
                <a asp-action="CreateGoal" asp-route-squadId="@Model.Id" class="btn btn-sm btn-success">
                    <i class="bi bi-plus-lg"></i> Новая задача
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="card mt-4">
            <div class="card-header">
                <h5>Задачи команды</h5>
            </div>
        </div>
    }
        <div class="card-body">
            @if (Model.Goals != null && Model.Goals.Any())
            {
            <div class="list-group">
                @foreach (var goal in Model.Goals.OrderByDescending(g => g.Importancy))
                {
                    <div class="list-group-item">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">
                                    @goal.Name
                                    <span class="badge bg-@(goal.State ? "success" : "warning") ms-2">
                                        @(goal.State ? "Выполнено" : "В работе")
                                    </span>
                                </h6>
                                <small class="text-muted">@goal.Desc</small>
                                <div class="mt-2">
                                    <span class="badge bg-info">Важность: @goal.Importancy</span>
                                    <span class="badge bg-secondary ms-2">Срок: @goal.FinishTime.ToLocalTime().ToString("g")</span>
                                    @if (goal.Performer != null)
                                    {
                                        <span class="badge bg-primary ms-2">Исполнитель: @goal.Performer.UserName</span>
                                    }
                                </div>
                            </div>
                            <div>
                                <a asp-action="TaskDetails" asp-route-id="@goal.Id"
                                   class="btn btn-sm btn-outline-primary">
                                    <i class="bi bi-eye"></i> Подробнее
                                </a>
                                @if (User.Identity.Name == goal.Performer?.UserName && !goal.State)
                                {
                                    <a asp-action="AddFeedback" asp-route-goalId="@goal.Id"
                                       class="btn btn-sm btn-info ms-1">
                                        <i class="bi bi-chat-left-text"></i> Отзыв
                                    </a>
                                }
                                @if (goal.PerformerID == null)
                                {
                                    <span class="badge bg-info">Доступна для взятия</span>
                                }
                            </div>
                            @if (User.Identity.Name == Model.Leader.UserName)
                            {
                                <div>
                                    <a asp-action="EditGoal" asp-route-id="@goal.Id"
                                       class="btn btn-sm btn-outline-primary me-2">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <form asp-action="DeleteGoal" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@goal.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger"
                                                onclick="return confirm('Удалить эту задачу?')">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            }
            else
            {
                <div class="alert alert-info">Нет задач для отображения</div>
            }
        </div>
    </div>
</div>

<!-- Модальное окно приглашения -->
<div class="modal fade" id="inviteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Пригласить участника</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="inviteForm">
                    <input type="hidden" name="squadId" value="@Model.Id" />
                    <div class="mb-3">
                        <label class="form-label">Имя пользователя</label>
                        <input type="text" name="invitedUserName" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Роль в команде</label>
                        <input type="text" name="role" class="form-control" placeholder="Разработчик, Дизайнер и т.д.">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <button type="button" class="btn btn-primary" id="sendInviteBtn">Отправить</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .list-group-item {
            transition: all 0.3s ease;
        }
        .remove-member {
            transition: opacity 0.3s;
        }
        .remove-member:hover {
            opacity: 0.8;
        }
    </style>
}

@section Scripts {
    <script>
        // Отправка приглашения
        document.getElementById('sendInviteBtn').addEventListener('click', async function() {
            const formData = new FormData(document.getElementById('inviteForm'));
            const data = Object.fromEntries(formData.entries());
            
            const response = await fetch('/Invitations/Create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            });
            
            const result = await response.json();
            if (result.success) {
                location.reload(); // Обновляем страницу
            } else {
                alert(result.message);
            }
        });

        document.querySelectorAll('.remove-member').forEach(btn => {
            btn.addEventListener('click', async function () {
                if (!confirm('Вы уверены, что хотите удалить этого участника?')) return;

                const userId = this.dataset.userid;
                const squadId = this.dataset.squadid;

                try {
                    const response = await fetch(`/Squads/RemoveMember`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': '@GetAntiXsrfRequestToken()'
                        },
                        body: JSON.stringify({
                            squadId: squadId,
                            userId: userId
                        })
                    });

                    if (response.ok) {
                        location.reload();
                    } else {
                        const error = await response.text();
                        console.error('Ошибка удаления:', error);
                        alert('Ошибка при удалении участника: ' + error);
                    }
                } catch (error) {
                    console.error('Ошибка:', error);
                    alert('Произошла ошибка: ' + error.message);
                }
            });
        });

        // Функция для получения CSRF-токена
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }

        document.querySelectorAll('.delete-goal-form').forEach(form => {
            form.addEventListener('submit', function (e) {
                if (!confirm('Вы уверены, что хотите удалить эту задачу?')) {
                    e.preventDefault();
                }
            });
        });
    </script>
}